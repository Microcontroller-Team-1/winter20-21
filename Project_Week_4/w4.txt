class LED
{
public:
int pin;
void on();
void off();
};

class BUTTON
{
public :
int pin;
int tekan();

};

LED red_car, yellow_car, green_car, red_pdstrn, green_pdstrn;
BUTTON Button_pdstrn, Button_bus;


void LED::on()
{
digitalWrite(pin,HIGH);
}

void LED::off()
{
digitalWrite(pin,LOW);
}

int BUTTON::tekan()
{
int value; 
value = digitalRead(pin);
return value;
}



//state car
#define car_move  0
#define car_ready_to_stop 1
#define car_ready_to_move 2
#define car_stop 3
#define bus_ready_to_move 4
#define bus_move 5
#define bus_ready_to_stop 6

int state = 0;
int defaults =10000;

 
unsigned long starting_time;

void setup() {
    Button_bus.pin = 10;
  Button_pdstrn.pin = 11;
 red_car.pin = 3;
 yellow_car.pin = 4;
 green_car.pin = 5;
 red_pdstrn.pin = 8;
 green_pdstrn.pin=9;
    pinMode(red_car.pin, OUTPUT);
    pinMode(yellow_car.pin, OUTPUT);
    pinMode(green_car.pin, OUTPUT);
    pinMode(red_pdstrn.pin, OUTPUT);
    pinMode(green_pdstrn.pin, OUTPUT);
    pinMode(Button_pdstrn.pin, INPUT);
    pinMode(Button_bus.pin, INPUT);
    digitalWrite(green_car.pin, HIGH);
    digitalWrite(green_car.pin, HIGH);
    digitalWrite(red_car.pin, HIGH);
    digitalWrite(yellow_car.pin, HIGH);
    digitalWrite(green_car.pin, LOW);
    digitalWrite(yellow_car.pin, LOW);
    digitalWrite(red_car.pin, LOW);
    digitalWrite(red_pdstrn.pin, HIGH);
    digitalWrite(green_pdstrn.pin, HIGH);
    digitalWrite(red_pdstrn.pin, LOW);
    digitalWrite(green_pdstrn.pin,LOW);

}

void loop()
{
switch (state)
{
    case car_move:
    green_car.on();
    red_pdstrn.on();

    starting_time=millis();
    
    while(true)
  {   
        if(digitalRead(Button_bus.pin)==1)
      {
            green_car.on();
            red_pdstrn.on();
        defaults=20000;

      }
        else if(digitalRead(Button_pdstrn.pin)==1 && (millis()-starting_time>defaults))

      {
          
          state=car_ready_to_stop;
          break;

      }



  }

    
    case car_ready_to_stop:
    green_car.off();
    yellow_car.on();
    delay(2000);
    yellow_car.off();
    state = car_stop;
    break;


    case car_stop:
    red_car.on();
    red_pdstrn.off();
    green_pdstrn.on();

    starting_time=0;
    starting_time=millis();
    
    while(true)
  {
    starting_time=millis();
    while(millis()-starting_time>2000)
    {
      while(digitalRead(Button_bus.pin)==1)
          {  
             yellow_car.on();
        	green_pdstrn.off();
            red_pdstrn.on();
            delay(10000);
            yellow_car.off();
            green_car.on();
            delay(10000);
        	green_car.off();
            yellow_car.on();
            delay(2000);
            yellow_car.off();
          }
     
     }
   
      delay(5000);
      green_pdstrn.off();
      red_car.off();
      red_pdstrn.on();
      state = car_ready_to_move;
      
  	  break;
    }
      
      
      
  


    
   
    case car_ready_to_move:
    yellow_car.on();
    delay(1000);
    yellow_car.off();
    state = car_move;
    break;
}
}